//Stack using array implmentation//
#include <stdio.h> //standard input output header file//
#include <stdlib.h> 
#define size 4 //declaring the size//

int top =-1; //declaring the initial value of stack as -1// 
int arr[size]; 

void push(); //push function//
void pop(); //pop function//
void show(); // show function//

int main() //main function//
{ 
        int choice; 
        while(1) 
        { 
            printf("select the operation\n"); //displaying the operation//
            printf("\n 1.Push\n 2.Pop\n 3.Display\n 4.Exit\n"); 
            scanf("%d",&choice); 
            switch(choice) //switching to operation choice//
            { 
            case 1: 
                push(); 
                break; 
            case 2: 
                pop(); 
                break; 
            case 3: 
                show(); 
            case 4: 
                exit(0); 
            default:printf("invalid choice\n"); //default case if none of the cases are invalid//
            } 
        } 
} 

  
void push() //push function//
{ 
    int n; //declaring an integer//
    if(top==size-1) //checking if the top is full or not//
    { 
        printf("overflow"); 
    } 
    else 
    { 
        printf("enter the element to be inserted\n"); 
        scanf("%d",&n); 
        top++; //adding an element to stack//
        arr[top]=n; 
    } 
} 

  
void pop() //pop function//
{ 
    if (top==-1) //checking if the top is empty or not//
    { 
        printf("underflow"); 
    } 
    else 
    
    { 
        printf("removed element %d\n",arr[top]); 
        top--; //removing an element from the stack//
    } 
} 

  
void show() //show function//
{ 
    int i; //declaring a new integer//
    if(top!=-1) //if top is not equal to -1 then display will happen//
    { 
        for(i=0;i<top;i++) 
        { 
            printf("%d\n",arr[i]); 
        } 
        printf("\n"); 
    } 
    else 
    { 
        printf("Stack is empty\n"); //if stack is equal to -1//
    } 
} 

 

 
